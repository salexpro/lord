{"version":3,"sources":["../../node_modules/@glidejs/glide/dist/glide.esm.js","../../src/js/photo.js"],"names":["warn","msg","console","error","toInt","value","parseInt","toFloat","parseFloat","isString","isObject","type","_typeof","isNumber","isFunction","isUndefined","isArray","constructor","Array","mount","glide","extensions","events","components","name","_name","define","obj","prop","definition","Object","defineProperty","sortKeys","keys","sort","reduce","r","k","mergeOptions","defaults","settings","options","_extends","hasOwnProperty","classes","direction","breakpoints","Run","Glide","Components","Events","this","_o","make","move","_this","disabled","disable","emit","calculate","Transition","after","isOffset","enable","length","steps","countableSteps","index","isEnd","isType","rewind","Math","min","isStart","get","_m","set","substr","Html","slides","focusAt","bound","perView","now","Date","getTime","throttle","func","wait","timeout","context","args","result","previous","later","leading","apply","throttled","at","remaining","arguments","clearTimeout","trailing","setTimeout","cancel","Gaps","i","len","style","Direction","MARGIN_TYPE","remove","marginLeft","marginRight","gap","Sizes","on","wrapper","children","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","push","exist","window","HTMLElement","root","selector","track","querySelector","TRACK_SELECTOR","prototype","slice","call","filter","slide","classList","contains","cloneSlide","_r","document","_t","t","Peek","peek","_v","before","Move","offset","undefined","movement","slideWidth","translate","is","setupSlides","width","setupWrapper","dimention","wrapperSize","offsetWidth","grow","Clones","reductor","Build","typeClass","activeClass","add","activeSlide","forEach","sibling","removeClasses","items","collect","_Glide$settings","peekIncrementer","part","start","end","max","floor","clone","cloneNode","_i","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","EventsBinder","bind","unbind","off","destroy","resolve","pattern","token","split","join","FLIPED_MOVEMENTS","addClass","removeClass","VALID_DIRECTIONS","indexOf","Rtl","modify","Gap","Grow","Peeking","Focusing","mutator","TRANSFORMERS","concat","mutate","transformer","Translate","transform","compose","property","animationTimingFunc","duration","transition","callback","rewindDuration","animationDuration","Swipe","swipeSin","swipeStartX","swipeStartY","capture","supportsPassive$1","passive","bindSwipeStart","event","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","touchAngle","touchRatio","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","dragging","threshold","swipeDistance","swipeDeg","round","perTouch","unbindSwipeMove","unbindSwipeEnd","swipeThreshold","START_EVENTS","dragThreshold","unbindSwipeStart","_this2","MOVE_EVENTS","_this3","END_EVENTS","MOUSE_EVENTS","changedTouches","swipeable","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","Controls","_n","NAV_SELECTOR","_c","CONTROLS_SELECTOR","addBindings","setActive","removeActive","controls","item","activeNav","removeBindings","elements","currentTarget","Keyboard","keyboard","press","keyCode","Autoplay","hoverpause","autoplay","setInterval","stop","time","clearInterval","sortBreakpoints","points","Breakpoints","match","matchMedia","point","matches","startAt","ltr","rtl","slider","carousel","disabledArrow","Symbol","iterator","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","assign","source","object","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","EventsBus","hop","handler","_e","mount$$1","transformers","update","go","distance","play","interval","pause","get$$1","set$$1","o","_d","status","listeners","el","closure","addEventListener","removeEventListener",">","<","=","supportsPassive","opts","e","COMPONENTS","Glide$1","_Core","Glide$$1"],"mappings":"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","sourcesContent":["/*!\n * Glide.js v3.2.7\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = 0;\n            }\n\n            Events.emit('run.end', move);\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = length;\n            }\n\n            Events.emit('run.start', move);\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: value.substr(1) ? value.substr(1) : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length;\n\n      // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = this.slideWidth + 'px';\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n\n\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n\n          clone.classList.add(classes.cloneSlide);\n\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n\n\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n      var width = Components.Sizes.slideWidth + 'px';\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n\n          Components.Move.make(subExSx * toFloat(touchRatio));\n\n          Components.Html.root.classList.add(classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      item.classList.add(settings.classes.activeNav);\n\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.activeNav);\n      });\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      if (controls[Glide.index]) {\n        controls[Glide.index].classList.remove(Glide.settings.classes.activeNav);\n      }\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n  var points = sortBreakpoints(settings.breakpoints);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;\n","import Glide from '@glidejs/glide'\n\nconst glide = new Glide('.glide', {\n    type: 'carousel',\n    perView: 3,\n    focusAt: 'center',\n    gap: 5\n});\n\nglide.mount();\n"]}